name: Firmware Upload (common)

on:
  workflow_call:
    inputs:
      build_label:
        required: true
        type: string
      upload_channel:
        required: true
        type: string
      create_release:
        required: false
        type: boolean
        default: true

jobs:
  upload_fw:
    name: "Upload firmware and create release"
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.head_ref == 'main' || startsWith(github.ref, 'refs/pull/') || startsWith(github.ref, 'refs/tags/')
    steps:
    - name: Download binaries
      uses: actions/download-artifact@v4
      with:
        pattern: "*.bin"
        merge-multiple: true
    - name: Download upload script
      uses: actions/download-artifact@v4
      with:
        name: "upload_scripts"
        path: "scripts"
    - name: Download common upload script
      uses: actions/download-artifact@v4
      with:
        name: "common_upload_scripts"
        path: "common/scripts"
    - name: "Upload version ${{ inputs.build_label }} to production server on ${{ inputs.upload_channel }}"
      run: |
        chmod +x scripts/upload_all_firmware.sh
        chmod +x common/scripts/upload_single_firmware.sh
        echo ./scripts/upload_all_firmware.sh ${{ inputs.upload_channel }} ${{ inputs.build_label }}
        ./scripts/upload_all_firmware.sh ${{ inputs.upload_channel }} ${{ inputs.build_label }} ${{ secrets.FW_UPLOAD_TOKEN }} ${{ secrets.FW_UPLOAD_URL }}

    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/RELEASE') && inputs.create_release == true
      uses: softprops/action-gh-release@v2
      with:
        files: |
          *.bin
          scripts/upload_all_firmware.sh
          common/scripts/upload_single_firmware.sh
        name: Release ${{ inputs.build_label }}
        draft: false
        prerelease: false
